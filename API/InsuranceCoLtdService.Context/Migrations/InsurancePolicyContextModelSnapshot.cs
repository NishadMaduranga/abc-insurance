// <auto-generated />
using InsuranceCoLtdService.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InsuranceCoLtdService.Context.Migrations
{
    [DbContext(typeof(InsurancePolicyContext))]
    partial class InsurancePolicyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PolicyDescription");

                    b.Property<string>("PolicyName");

                    b.HasKey("PolicyId");

                    b.ToTable("Policies");

                    b.HasData(
                        new
                        {
                            PolicyId = 1,
                            PolicyName = "Life"
                        },
                        new
                        {
                            PolicyId = 2,
                            PolicyName = "Moter Car"
                        });
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.PolicyRiskTypes", b =>
                {
                    b.Property<int>("PId");

                    b.Property<int>("RId");

                    b.HasKey("PId", "RId");

                    b.HasIndex("RId");

                    b.ToTable("PolicyRiskTypes");

                    b.HasData(
                        new
                        {
                            PId = 1,
                            RId = 1
                        });
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.RiskFactor", b =>
                {
                    b.Property<int>("RiskFactorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RiskFactorDescription");

                    b.Property<string>("RiskFactorName");

                    b.Property<int>("ValidationId");

                    b.HasKey("RiskFactorId");

                    b.HasIndex("ValidationId");

                    b.ToTable("RiskFactors");

                    b.HasData(
                        new
                        {
                            RiskFactorId = 1,
                            RiskFactorName = "Age",
                            ValidationId = 1
                        },
                        new
                        {
                            RiskFactorId = 2,
                            RiskFactorName = "Location",
                            ValidationId = 2
                        },
                        new
                        {
                            RiskFactorId = 3,
                            RiskFactorName = "Height",
                            ValidationId = 2
                        },
                        new
                        {
                            RiskFactorId = 4,
                            RiskFactorName = "Waight",
                            ValidationId = 2
                        },
                        new
                        {
                            RiskFactorId = 5,
                            RiskFactorName = "Gender",
                            ValidationId = 1
                        },
                        new
                        {
                            RiskFactorId = 6,
                            RiskFactorName = "Deppendance",
                            ValidationId = 1
                        });
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.RiskType", b =>
                {
                    b.Property<int>("RiskTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RiskTypeDescription");

                    b.Property<string>("RiskTypeName");

                    b.HasKey("RiskTypeId");

                    b.ToTable("RiskTypes");

                    b.HasData(
                        new
                        {
                            RiskTypeId = 1,
                            RiskTypeDescription = "Health"
                        },
                        new
                        {
                            RiskTypeId = 2,
                            RiskTypeDescription = "Vehicle"
                        });
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.RiskTypeRiskFactor", b =>
                {
                    b.Property<int>("RiskFactorId");

                    b.Property<int>("RiskTypeId");

                    b.HasKey("RiskFactorId", "RiskTypeId");

                    b.HasIndex("RiskTypeId");

                    b.ToTable("RiskTypeRiskFactor");

                    b.HasData(
                        new
                        {
                            RiskFactorId = 1,
                            RiskTypeId = 1
                        });
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.Validation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Validations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TextBox"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Check Box"
                        });
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.PolicyRiskTypes", b =>
                {
                    b.HasOne("InsuranceCoLtdService.Context.Models.Policy", "Policy")
                        .WithMany("PolicyRiskTypes")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InsuranceCoLtdService.Context.Models.RiskType", "RiskType")
                        .WithMany("PolicyRiskTypes")
                        .HasForeignKey("RId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.RiskFactor", b =>
                {
                    b.HasOne("InsuranceCoLtdService.Context.Models.Validation", "Validation")
                        .WithMany()
                        .HasForeignKey("ValidationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InsuranceCoLtdService.Context.Models.RiskTypeRiskFactor", b =>
                {
                    b.HasOne("InsuranceCoLtdService.Context.Models.RiskFactor", "RiskFactor")
                        .WithMany("RiskTypeRiskFactors")
                        .HasForeignKey("RiskFactorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InsuranceCoLtdService.Context.Models.RiskType", "RiskType")
                        .WithMany("RiskTypeRiskFactors")
                        .HasForeignKey("RiskTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
